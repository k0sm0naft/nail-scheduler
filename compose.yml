services:
  db:
    image: postgres:16.4-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_LOCAL_PORT}:${DB_DOCKER_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5

  cache:
    image: redis:7.4.0-alpine3.20
    container_name: redis_cache
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/var/lib/redis/data
      - .redis.conf:/var/lib/redis/redis.conf
    command: [ "redis-server", "/var/lib/redis/redis.conf" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  api:
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    restart: on-failure
    container_name: nail-scheduler_api
    image: api
    build: ./api-service
    ports:
      - "${API_LOCAL_PORT}:${SPRING_DOCKER_PORT}"
      - "${DEBUG_PORT}:${DEBUG_PORT}"
    environment:
      DB_HOST: postgres_db
      DB_LOCAL_PORT: ${DB_LOCAL_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      REDIS_HOST: redis_cache
      REDIS_PORT: ${REDIS_PORT}
      JWT_SECRET: ${JWT_SECRET}
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"

volumes:
  postgres_data:
  redis_data:
